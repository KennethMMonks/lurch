var InputStructure,InputTree,Structure,deserializeIfNeeded,expectedArgumentCount,functions,isInTheInputTree,slice=[].slice;"undefined"!=typeof require&&null!==require?(Structure=require("./structure").Structure,InputStructure=require("./input-structure").InputStructure):"undefined"!=typeof WorkerGlobalScope&&null!==WorkerGlobalScope?(importScripts("structure.js"),importScripts("input-structure.js")):null!=("undefined"!=typeof self&&null!==self?self.importScripts:void 0)&&(importScripts("release/structure.js"),importScripts("release/input-structure.js")),(InputTree=(new InputStructure).attr({id:"root"})).trackIDs(),(functions={}).getInputTree=function(){return InputTree},isInTheInputTree=function(e){for(;e instanceof InputStructure;){if(e===InputTree)return!0;e=e.parent()}return!1},deserializeIfNeeded=function(e){return e instanceof InputStructure?e:Structure.fromJSON(e)},functions.insert=function(e,t,r){var n,u;if(null!=(u=Structure.instanceWithID(t))&&0<=r&&r<=u.children().length&&isInTheInputTree(u)&&null!=(n=deserializeIfNeeded(e).setup())&&n instanceof InputStructure)return u.insertChild(n,r),n.trackIDs()},functions.delete=function(e){var t;if(null!=(t=Structure.instanceWithID(e))&&isInTheInputTree(t)&&t!==InputTree)return t.removeFromParent(),t.untrackIDs()},functions.replace=function(e,t){var r,n;if(null!=(n=Structure.instanceWithID(e))&&isInTheInputTree(n)&&n!==InputTree&&null!=(r=deserializeIfNeeded(t).setup())&&r instanceof InputStructure)return n.replaceWith(r),n.untrackIDs(),r.trackIDs()},functions.setAttribute=function(e,t,r){var n;if(null!=(n=Structure.instanceWithID(e))&&isInTheInputTree(n)&&("id"===t&&n.untrackIDs(!1),void 0===r?n.clearAttributes(t):n.setAttribute(t,r),"id"===t))return n.trackIDs(!1)},("undefined"!=typeof WorkerGlobalScope&&null!==WorkerGlobalScope||null!=("undefined"!=typeof self&&null!==self?self.importScripts:void 0))&&(expectedArgumentCount={insert:3,delete:1,replace:2,setAttribute:3,getInputTree:0},self.addEventListener("message",function(e){var t,r,n;if(n=e.data,r=n[0],t=2<=n.length?slice.call(n,1):[],expectedArgumentCount[r]===t.length)return"getInputTree"===r?self.postMessage(functions.getInputTree().toJSON()):functions[r].apply(functions,t)})),"undefined"!=typeof exports&&null!==exports&&(exports.Structure=Structure,exports.InputStructure=InputStructure,exports.insert=functions.insert,exports.delete=functions.delete,exports.replace=functions.replace,exports.setAttribute=functions.setAttribute,exports.getInputTree=functions.getInputTree);
//# sourceMappingURL=lde.js.map

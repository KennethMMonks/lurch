{"version":3,"sources":["structure.litcoffee"],"names":["Structure","bind","fn","me","apply","arguments","exports","this","computedAttributes","getComputedAttribute","key","setComputedAttribute","value","clearComputedAttribute"],"mappings":"AAOI,IAAAA,UAAAC,KAAA,SAAAC,EAAAC,GAAA,OAAA,WAAA,OAAAD,EAAAE,MAAAD,EAAAE,aAAAC,QAAQN,UAAkBA,UAAA,WAMR,SAAAA,qMACVO,KAACC,yCAeLC,qBAAuB,SAAEC,UAASH,KAACC,mBAAmBE,gBACtDC,qBAAuB,SAAED,EAAKE,UAC1BL,KAACC,mBAAmBE,GAAOE,eAC/BC,uBAAyB,SAAEH,iBAAgBH,KAACC,mBAAmBE,MAzBzC","file":"structure.js","sourcesContent":["\n# LDE Structures\n\nThe very generic word \"structure\" is used in the LDE to describe a subtree\nof the LDE Document.  For more details on this, see\n[the design overview docs](https://lurchmath.github.io/lde/site/overview/).\n\n    exports.Structure = class Structure\n\n## Constructor\n\nThe constructor just initializes internal fields.\n\n        constructor : ->\n            @computedAttributes = { }\n\n## Computed attributes\n\nThe dictionary of computed attributes has getters and setters that work on\nkeys or key-value pairs (respectively).  The intent is for them to store the\nresults of computations done by the LDE.  There is also a corresponding\n\"clear\" function for deleting entries from the computed attributes\ndictionary.\n\nThe client is permitted to use any keys they like here, but the `feedback`\nkey is special; see [the documentation\nhere](https://lurchmath.github.io/lde/site/phase0-structures/#methods-in-the-structure-class)\nfor details.\n\n        getComputedAttribute : ( key ) => @computedAttributes[key]\n        setComputedAttribute : ( key, value ) =>\n            @computedAttributes[key] = value\n        clearComputedAttribute : ( key ) => delete @computedAttributes[key]\n"]}
{"version":3,"sources":["reason.litcoffee"],"names":["Reason","Structure","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","require","superClass","className","addSubclass","exports"],"mappings":"AAqBI,IAAAA,OAAAC,UAAAC,OAAA,SAAAC,EAAAC,GAAA,SAAAC,IAAAC,KAAAC,YAAAJ,EAAA,IAAA,IAAAK,KAAAJ,EAAAK,QAAAC,KAAAN,EAAAI,KAAAL,EAAAK,GAAAJ,EAAAI,IAAA,OAAAH,EAAAM,UAAAP,EAAAO,UAAAR,EAAAQ,UAAA,IAAAN,EAAAF,EAAAS,UAAAR,EAAAO,UAAAR,6BAAG,oBAAAU,SAAA,OAAAA,UAAgBZ,UAAcY,QAAQ,eAARZ,WAI3BD,OAAA,SAAAc,qFAAeb,uBAIjBc,UAAYd,UAAUe,YAAY,SAAUhB,KAJ1C,GAUH,oBAAAiB,SAAA,OAAAA,UAAcA,QAAQjB,OAASA","file":"reason.js","sourcesContent":["\n# Reason Structures\n\nThis file defines one particular subclass of the\n[Structure](structure.litcoffee) class, one for reasons.\n\nIn the LDE, a structure representing a mathematical statement needs to be\ngraded/validated as a step of work if and only if it has a reason attached\nto it.  Thus reasons are a very important feature in the LDE.\n\nEach reason must be connected to the statement it justifies, or it will have\nno effect.  Let us call the statement the reason modifies its *target*.\n\nThe reason contains in its text attribute the name of some labeled structure\naccessible to the target that is to be used as a rule for validating/grading\nthe target.\n\nBecause this depends on the `Structure` class, we import that first, as long\nas we are running in Node.  If not, we assume that the scripts defining the\n`Structure` class have been imported already.\n\n    if require? then { Structure } = require './structure'\n\nDefine the subclass.\n\n    class Reason extends Structure\n\nRegister this subclass for use in serialization and deserialization.\n\n        className : Structure.addSubclass 'Reason', Reason\n\nLater we will define validation routines for this class.\n\nNow if this is being used in a Node.js context, export the class we defined.\n\n    if exports? then exports.Reason = Reason\n"]}
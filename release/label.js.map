{"version":3,"sources":["label.litcoffee"],"names":["Label","Structure","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","require","superClass","className","addSubclass","exports"],"mappings":"AAUI,IAAAA,MAAAC,UAAAC,OAAA,SAAAC,EAAAC,GAAA,SAAAC,IAAAC,KAAAC,YAAAJ,EAAA,IAAA,IAAAK,KAAAJ,EAAAK,QAAAC,KAAAN,EAAAI,KAAAL,EAAAK,GAAAJ,EAAAI,IAAA,OAAAH,EAAAM,UAAAP,EAAAO,UAAAR,EAAAQ,UAAA,IAAAN,EAAAF,EAAAS,UAAAR,EAAAO,UAAAR,6BAAG,oBAAAU,SAAA,OAAAA,UAAgBZ,UAAcY,QAAQ,eAARZ,WAI3BD,MAAA,SAAAc,qFAAcb,uBAOhBc,UAAYd,UAAUe,YAAY,QAAShB,KAPzC,GAaH,oBAAAiB,SAAA,OAAAA,UAAcA,QAAQjB,MAAQA","file":"label.js","sourcesContent":["\n# Label Structures\n\nThis file defines a particular subclass of the\n[Structure](structure.litcoffee) class.  It is supposed to model the idea of\na label in mathematics.  (For example, in LaTeX one might use the `\\label{}`\ncommand to label an expression, section, list item, and so on.)\n\nIf we are running in node we need to load the `Structure` class.\n\n    if require? then { Structure } = require './structure'\n\nNow we can extend it to our new class.\n\n    class Label extends Structure\n\nWe first need to register this subclass with the global list of subclasses\nof the Structure` class (see the discussion regarding [Serialization and\nDeserialization](structure.litcoffee#serialization-and-deserialization) in\nthe `Structure` class documentation.)\n\n        className : Structure.addSubclass 'Label', Label\n\nWe will add a validation routine and perhaps other methods here later.\n\nNow if this is being used in a Node.js context, export the class we defined.\n\n    if exports? then exports.Label = Label\n"]}
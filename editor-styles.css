/*
 * This file styles the contents of the TinyMCE editor iframe.
 * Styling for the main app page (which contains the editor and other things as
 * well) is in main-app-styles.css.
 */
 
 @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
 /* for experimenting, this shold let us change most fonts */
* {
  font-family: 'Roboto', 'Arial', Helvetica, sans-serif;
}
code {
  background-color: rgb(230, 230, 230);
  font-size: 0.9em;
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-family: 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
}
/* set css variable for \text mode in Math Live*/
:root {
  --_text-font-family: 'Roboto', 'Arial', Helvetica, sans-serif;
}
/* p, h1, h2, h3, h4, h5, h6 {
  font-family: 'TeX Gyre Pagella', Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif; 
} */
p {
  font-size: 12pt;
}
/* Expression atoms */
.putdown-notation {
    font-size : 16pt;
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    /* 'Courier New', Courier, monospace; */
}
.smackdown-notation {
    font-size : 16pt;
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    /* 'Courier New', Courier, monospace; */
}
.ML__latex {
    font-size : 1.0rem;
}
/*
 * The following was an experiment in using background color for expression feedback.
 * It was not perfect, so is commented out.  But I'm keeping it here so that we have
 * the appropriate CSS selectors for reference if we want to improve this later.
 *
span:has(span > .feedback-marker-valid) {
    background-color: #4CAF5080;
}
span:has(span > .feedback-marker-invalid) {
    background-color: #FF000080;
}
span:has(span > .feedback-marker-indeterminate) {
    background-color: #D8B40080;
}
span:has(span > .feedback-marker-error) {
    background-color: #FF000080;
}
 *
 */
span.feedback-marker-valid::after {
    content: '✓';
    font-family: 'Lucida Grande';
    color: #4CAF50;
    font-weight: bold;
}
span.feedback-marker-invalid::after {
    content: '✗';
    font-family: 'Lucida Grande';
    color: red;
    font-weight: bold;
}
span.feedback-marker-indeterminate::after {
    content: '?';
    font-family: 'Lucida Grande';
    color: rgb(216, 180, 0);
    font-weight: bold;
}
span.feedback-marker-error::after {
    content: '!';
    font-family: 'Lucida Grande';
    color: red;
    font-weight: bold;
}

/* Editing View */
/* Shows a border around atoms which highlights when hovered. */
body.shell-style-boxed {

  /* Atoms (non-shells) */
  .lurch-atom {
    /* border: 1px solid #bbb; */
    border: 1px solid #b4d7ff;
    border-radius: 6px;
    padding: 1px 2px;
  }
  /* Override that for atoms that are shells */
  div.lurch-atom[data-shell_title] {
    position: relative;
    border: 1px solid #b4d7ff;
    border-radius: 6px;
    padding: 0.8rem 2rem 0.6rem;
    margin: 1.5rem 0 1rem;
  }
  
  /* Make atom borders thick when hovered */
  :not(:not(.lurch-atom:hover),.lurch-atom:has(.lurch-atom:hover)) {
    outline: 3px solid #b4d7ff
  }
  /* Reduce the padding and margins for subproofs */
  div.lurch-atom[data-shell_title=""] {
    padding: 0.5em 0.75em;
    margin: 1ex 0;
  }
  /* If the shell is a given, we make the border dashed. */
  div.lurch-atom[data-shell_title].lurch-given {
      /* This class may no longer be supported
         and may need some JS code added to support it again. */
      border: 2px dashed #bbb;
  }
  div.lurch-atom[data-shell_title]::before {
    content: attr(data-shell_title);
    /* color: #bbb; */
    color: #aaa;
    background-color: white;
    font-weight: bold;
    position: absolute;
    top: -9pt;
    left: 6pt;
    padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="valid"]::after {
      content: '✓';
      color: #4CAF50;
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 6pt;
      padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="invalid"]::after {
      content: '✗';
      color: rgb(235,78,50);
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 6pt;
      padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="indeterminate"]::after {
      content: '?';
      color: rgb(216, 180, 0);
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 6pt;
      padding: 0 6pt;
  }
}

/* Minimal view shows no borders and uses whitespace to visually surround its
   content. */
body.shell-style-minimal {

  div.lurch-atom[data-shell_title] {
    position: relative;
    border: none;
    padding: 0.8rem 2rem 0.6rem;
    margin: 1.5rem 0 1rem;
  }

  /* Highlighting of nested shells on hover */
  :not(:not(.lurch-atom:hover),.lurch-atom:has(.lurch-atom:hover)) {
    background-color: #e7f3fd;
  }
  
  div.lurch-atom[data-shell_title].lurch-given {
    /* This class may no longer be supported
       and may need some JS code added to support it again. */
    border-top: 2px dashed #bbb;
    border-bottom: 2px dashed #bbb;
  }
  /* Minimal view of subproofs (shells with no title) is to be indented on the
     left according to it's nesting level. */
  div.lurch-atom[data-shell_title=""] {
      border: none;
      margin: 0;
      padding: 0 0 0 1.5rem;
  }
  div.lurch-atom[data-shell_title]::before {
      content: attr(data-shell_title);
      color: #aaa;
      background-color: white;
      font-weight: bold;
      position: absolute;
      top: -9pt;
      /* left: 6pt; */
      left: 0pt;
      padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="valid"]::after {
      content: '✓';
      color: #4CAF50;
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 0pt;
      padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="invalid"]::after {
      content: '✗';
      color: red;
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 0pt;
      padding: 0 6pt;
  }
  div.lurch-atom[data-shell_title][data-validation_result="indeterminate"]::after {
      content: '?';
      color: rgb(216, 180, 0);
      background-color: white;
      font-family: 'Lucida Grande';
      font-weight: bold;
      position: absolute;
      bottom: -7pt;
      right: 0pt;
      padding: 0 6pt;
  }
}

/* for both modes, minimal and boxed, remove margins and padding from paragraphs. */
div.lurch-atom[data-shell_title] p,
body.shell-style-minimal div.lurch-atom[data-shell_title] p
 {
  margin: 0;
  padding: 0;
}

/* Dependency URL atoms  */
.lurch-dependency {
    border: solid 1px gray;
    padding: 0 1em;  
}
.lurch-dependency table {
    table-layout: fixed;
    width: 100%;  
}
.lurch-dependency .lurch-borderless-table {
    border: none;
}
.lurch-dependency col:first-of-type {
    width: 12%;  
}
.lurch-dependency td {
    vertical-align: baseline;
}
.lurch-dependency tr:nth-of-type(2) td:first-of-type {
    font-size: 11pt;
}

/* Other */
span.URL {
    font-family : 'Anonymous Pro', 'PT Mono', 'Oxygen monospace', monospace;
    /* 'Courier New', Courier, monospace; */
    font-size: small;
}
div.LC-meaning-preview {
    height: 10em;
    overflow-y: scroll;
}

/* Make the body of the editor look completely different if we are editing the
   header of a document, so that users do not confuse headers with documents. */
body.header-editor {
    background-color: #ddd;
}
